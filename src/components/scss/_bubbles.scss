.bubbles {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  gap: 1rem;
  place-items: center;
  gap: 1rem;
}
.bubble {
  background: var(--primary);
  color: var(--dark-text);
  padding: 0.65rem;
  border-radius: 50%;
  width: 100px;
  height: 100px;
  font-size: 85%;
  line-height: 1.1;
  display: flex;
  justify-content: center;
  align-items: center;
  word-break: break-word;
  ion-icon {
    color: #49e6de;
  }
}
/* entire container, keeps perspective */
.bubbles {
  perspective: 1000px;
}
/* flip the pane when hovered */
.bubble:hover,
.bubble:focus {
  transform: rotateY(180deg);
  cursor: pointer;
}
.bubble:nth-child(even):hover,
.bubble:focus {
  transform: rotateX(180deg);
  .back {
    transform: rotateX(180deg);
    animation: show 0.25s ease-in 1s;
  }
}
@keyframes show {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
/* flip speed goes here */
.bubble {
  transition: 0.6s;
  transform-style: preserve-3d;
  position: relative;
}

/* hide back of pane during swap */
.front,
.back {
  backface-visibility: hidden;
  position: absolute;
}

/* front pane, placed above back */
.front {
  display: none;
}
/* back, initially hidden pane */
.back {
  transform: inherit;
}
@media screen and (min-width: 768px) {
  .front {
    display: block;
    z-index: 2;
    transform: rotateY(0deg);
  }
  /* back, initially hidden pane */
  .back {
    transform: rotateY(180deg);
    left: 0.65em;
    right: 0.6em;
  }
}
@media screen and (min-width: 1024px) {
  .bubbles {
    grid-template-columns: repeat(3, 1fr);
  }
}
